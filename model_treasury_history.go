/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// TreasuryHistory treasury transaction history
type TreasuryHistory struct {
	// treasury transaction txid.
	Txid *string `json:"txid,omitempty"`
	// treasury transaction spent outcome in satoshi.
	Outcome *int64 `json:"outcome,omitempty"`
	// treasury transaction timestamp.
	Timestamp *int64 `json:"timestamp,omitempty"`
	// Reason for treasury transaction.
	Reason *string `json:"reason,omitempty"`
	// Announcement link for treasury transaction.
	AnnouncementUrl *string `json:"announcementUrl,omitempty"`
}

// NewTreasuryHistory instantiates a new TreasuryHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTreasuryHistory() *TreasuryHistory {
	this := TreasuryHistory{}
	return &this
}

// NewTreasuryHistoryWithDefaults instantiates a new TreasuryHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTreasuryHistoryWithDefaults() *TreasuryHistory {
	this := TreasuryHistory{}
	return &this
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *TreasuryHistory) GetTxid() string {
	if o == nil || o.Txid == nil {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryHistory) GetTxidOk() (*string, bool) {
	if o == nil || o.Txid == nil {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *TreasuryHistory) HasTxid() bool {
	if o != nil && o.Txid != nil {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *TreasuryHistory) SetTxid(v string) {
	o.Txid = &v
}

// GetOutcome returns the Outcome field value if set, zero value otherwise.
func (o *TreasuryHistory) GetOutcome() int64 {
	if o == nil || o.Outcome == nil {
		var ret int64
		return ret
	}
	return *o.Outcome
}

// GetOutcomeOk returns a tuple with the Outcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryHistory) GetOutcomeOk() (*int64, bool) {
	if o == nil || o.Outcome == nil {
		return nil, false
	}
	return o.Outcome, true
}

// HasOutcome returns a boolean if a field has been set.
func (o *TreasuryHistory) HasOutcome() bool {
	if o != nil && o.Outcome != nil {
		return true
	}

	return false
}

// SetOutcome gets a reference to the given int64 and assigns it to the Outcome field.
func (o *TreasuryHistory) SetOutcome(v int64) {
	o.Outcome = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *TreasuryHistory) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryHistory) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *TreasuryHistory) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *TreasuryHistory) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *TreasuryHistory) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryHistory) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *TreasuryHistory) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *TreasuryHistory) SetReason(v string) {
	o.Reason = &v
}

// GetAnnouncementUrl returns the AnnouncementUrl field value if set, zero value otherwise.
func (o *TreasuryHistory) GetAnnouncementUrl() string {
	if o == nil || o.AnnouncementUrl == nil {
		var ret string
		return ret
	}
	return *o.AnnouncementUrl
}

// GetAnnouncementUrlOk returns a tuple with the AnnouncementUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryHistory) GetAnnouncementUrlOk() (*string, bool) {
	if o == nil || o.AnnouncementUrl == nil {
		return nil, false
	}
	return o.AnnouncementUrl, true
}

// HasAnnouncementUrl returns a boolean if a field has been set.
func (o *TreasuryHistory) HasAnnouncementUrl() bool {
	if o != nil && o.AnnouncementUrl != nil {
		return true
	}

	return false
}

// SetAnnouncementUrl gets a reference to the given string and assigns it to the AnnouncementUrl field.
func (o *TreasuryHistory) SetAnnouncementUrl(v string) {
	o.AnnouncementUrl = &v
}

func (o TreasuryHistory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Txid != nil {
		toSerialize["txid"] = o.Txid
	}
	if o.Outcome != nil {
		toSerialize["outcome"] = o.Outcome
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.AnnouncementUrl != nil {
		toSerialize["announcementUrl"] = o.AnnouncementUrl
	}
	return json.Marshal(toSerialize)
}

type NullableTreasuryHistory struct {
	value *TreasuryHistory
	isSet bool
}

func (v NullableTreasuryHistory) Get() *TreasuryHistory {
	return v.value
}

func (v *NullableTreasuryHistory) Set(val *TreasuryHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableTreasuryHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableTreasuryHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTreasuryHistory(val *TreasuryHistory) *NullableTreasuryHistory {
	return &NullableTreasuryHistory{value: val, isSet: true}
}

func (v NullableTreasuryHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTreasuryHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
