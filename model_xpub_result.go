/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// XpubResult XpubRegister result
type XpubResult struct {
	// return xpub if broadcast success
	Xpub *string `json:"xpub,omitempty"`
	// return messages if broadcast failed
	Message *string `json:"message,omitempty"`
}

// NewXpubResult instantiates a new XpubResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXpubResult() *XpubResult {
	this := XpubResult{}
	return &this
}

// NewXpubResultWithDefaults instantiates a new XpubResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXpubResultWithDefaults() *XpubResult {
	this := XpubResult{}
	return &this
}

// GetXpub returns the Xpub field value if set, zero value otherwise.
func (o *XpubResult) GetXpub() string {
	if o == nil || o.Xpub == nil {
		var ret string
		return ret
	}
	return *o.Xpub
}

// GetXpubOk returns a tuple with the Xpub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubResult) GetXpubOk() (*string, bool) {
	if o == nil || o.Xpub == nil {
		return nil, false
	}
	return o.Xpub, true
}

// HasXpub returns a boolean if a field has been set.
func (o *XpubResult) HasXpub() bool {
	if o != nil && o.Xpub != nil {
		return true
	}

	return false
}

// SetXpub gets a reference to the given string and assigns it to the Xpub field.
func (o *XpubResult) SetXpub(v string) {
	o.Xpub = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *XpubResult) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubResult) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *XpubResult) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *XpubResult) SetMessage(v string) {
	o.Message = &v
}

func (o XpubResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Xpub != nil {
		toSerialize["xpub"] = o.Xpub
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableXpubResult struct {
	value *XpubResult
	isSet bool
}

func (v NullableXpubResult) Get() *XpubResult {
	return v.value
}

func (v *NullableXpubResult) Set(val *XpubResult) {
	v.value = val
	v.isSet = true
}

func (v NullableXpubResult) IsSet() bool {
	return v.isSet
}

func (v *NullableXpubResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXpubResult(val *XpubResult) *NullableXpubResult {
	return &NullableXpubResult{value: val, isSet: true}
}

func (v NullableXpubResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXpubResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
