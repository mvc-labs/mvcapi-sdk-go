/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// BlockHeaderPage block header saved by partition page
type BlockHeaderPage struct {
	// Block height.
	Height *int64 `json:"height,omitempty"`
	// Block hash.
	BlockHash *string `json:"blockHash,omitempty"`
	// Block timestamp.
	Timestamp *int64 `json:"timestamp,omitempty"`
	// current median time
	MedianTime *int64 `json:"medianTime,omitempty"`
	// Miner total rewards, including miner fee.
	Reward *int64 `json:"reward,omitempty"`
	// Guessed miner name.
	Miner *string `json:"miner,omitempty"`
	// Total txs count included in the block.
	TxCount *int32 `json:"txCount,omitempty"`
	// Size of the block
	Size *int64 `json:"size,omitempty"`
}

// NewBlockHeaderPage instantiates a new BlockHeaderPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockHeaderPage() *BlockHeaderPage {
	this := BlockHeaderPage{}
	return &this
}

// NewBlockHeaderPageWithDefaults instantiates a new BlockHeaderPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockHeaderPageWithDefaults() *BlockHeaderPage {
	this := BlockHeaderPage{}
	return &this
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetHeight() int64 {
	if o == nil || o.Height == nil {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetHeightOk() (*int64, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *BlockHeaderPage) SetHeight(v int64) {
	o.Height = &v
}

// GetBlockHash returns the BlockHash field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetBlockHash() string {
	if o == nil || o.BlockHash == nil {
		var ret string
		return ret
	}
	return *o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetBlockHashOk() (*string, bool) {
	if o == nil || o.BlockHash == nil {
		return nil, false
	}
	return o.BlockHash, true
}

// HasBlockHash returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasBlockHash() bool {
	if o != nil && o.BlockHash != nil {
		return true
	}

	return false
}

// SetBlockHash gets a reference to the given string and assigns it to the BlockHash field.
func (o *BlockHeaderPage) SetBlockHash(v string) {
	o.BlockHash = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *BlockHeaderPage) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetMedianTime returns the MedianTime field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetMedianTime() int64 {
	if o == nil || o.MedianTime == nil {
		var ret int64
		return ret
	}
	return *o.MedianTime
}

// GetMedianTimeOk returns a tuple with the MedianTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetMedianTimeOk() (*int64, bool) {
	if o == nil || o.MedianTime == nil {
		return nil, false
	}
	return o.MedianTime, true
}

// HasMedianTime returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasMedianTime() bool {
	if o != nil && o.MedianTime != nil {
		return true
	}

	return false
}

// SetMedianTime gets a reference to the given int64 and assigns it to the MedianTime field.
func (o *BlockHeaderPage) SetMedianTime(v int64) {
	o.MedianTime = &v
}

// GetReward returns the Reward field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetReward() int64 {
	if o == nil || o.Reward == nil {
		var ret int64
		return ret
	}
	return *o.Reward
}

// GetRewardOk returns a tuple with the Reward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetRewardOk() (*int64, bool) {
	if o == nil || o.Reward == nil {
		return nil, false
	}
	return o.Reward, true
}

// HasReward returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasReward() bool {
	if o != nil && o.Reward != nil {
		return true
	}

	return false
}

// SetReward gets a reference to the given int64 and assigns it to the Reward field.
func (o *BlockHeaderPage) SetReward(v int64) {
	o.Reward = &v
}

// GetMiner returns the Miner field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetMiner() string {
	if o == nil || o.Miner == nil {
		var ret string
		return ret
	}
	return *o.Miner
}

// GetMinerOk returns a tuple with the Miner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetMinerOk() (*string, bool) {
	if o == nil || o.Miner == nil {
		return nil, false
	}
	return o.Miner, true
}

// HasMiner returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasMiner() bool {
	if o != nil && o.Miner != nil {
		return true
	}

	return false
}

// SetMiner gets a reference to the given string and assigns it to the Miner field.
func (o *BlockHeaderPage) SetMiner(v string) {
	o.Miner = &v
}

// GetTxCount returns the TxCount field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetTxCount() int32 {
	if o == nil || o.TxCount == nil {
		var ret int32
		return ret
	}
	return *o.TxCount
}

// GetTxCountOk returns a tuple with the TxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetTxCountOk() (*int32, bool) {
	if o == nil || o.TxCount == nil {
		return nil, false
	}
	return o.TxCount, true
}

// HasTxCount returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasTxCount() bool {
	if o != nil && o.TxCount != nil {
		return true
	}

	return false
}

// SetTxCount gets a reference to the given int32 and assigns it to the TxCount field.
func (o *BlockHeaderPage) SetTxCount(v int32) {
	o.TxCount = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *BlockHeaderPage) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockHeaderPage) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *BlockHeaderPage) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *BlockHeaderPage) SetSize(v int64) {
	o.Size = &v
}

func (o BlockHeaderPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.BlockHash != nil {
		toSerialize["blockHash"] = o.BlockHash
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.MedianTime != nil {
		toSerialize["medianTime"] = o.MedianTime
	}
	if o.Reward != nil {
		toSerialize["reward"] = o.Reward
	}
	if o.Miner != nil {
		toSerialize["miner"] = o.Miner
	}
	if o.TxCount != nil {
		toSerialize["txCount"] = o.TxCount
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableBlockHeaderPage struct {
	value *BlockHeaderPage
	isSet bool
}

func (v NullableBlockHeaderPage) Get() *BlockHeaderPage {
	return v.value
}

func (v *NullableBlockHeaderPage) Set(val *BlockHeaderPage) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockHeaderPage) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockHeaderPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockHeaderPage(val *BlockHeaderPage) *NullableBlockHeaderPage {
	return &NullableBlockHeaderPage{value: val, isSet: true}
}

func (v NullableBlockHeaderPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockHeaderPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
