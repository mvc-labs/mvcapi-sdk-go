/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// XpubLiteBalance Balance for xpub lite wallet
type XpubLiteBalance struct {
	// confirmed balance plus unconfirmed balance
	Balance *int64 `json:"balance,omitempty"`
}

// NewXpubLiteBalance instantiates a new XpubLiteBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXpubLiteBalance() *XpubLiteBalance {
	this := XpubLiteBalance{}
	return &this
}

// NewXpubLiteBalanceWithDefaults instantiates a new XpubLiteBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXpubLiteBalanceWithDefaults() *XpubLiteBalance {
	this := XpubLiteBalance{}
	return &this
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *XpubLiteBalance) GetBalance() int64 {
	if o == nil || o.Balance == nil {
		var ret int64
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubLiteBalance) GetBalanceOk() (*int64, bool) {
	if o == nil || o.Balance == nil {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *XpubLiteBalance) HasBalance() bool {
	if o != nil && o.Balance != nil {
		return true
	}

	return false
}

// SetBalance gets a reference to the given int64 and assigns it to the Balance field.
func (o *XpubLiteBalance) SetBalance(v int64) {
	o.Balance = &v
}

func (o XpubLiteBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Balance != nil {
		toSerialize["balance"] = o.Balance
	}
	return json.Marshal(toSerialize)
}

type NullableXpubLiteBalance struct {
	value *XpubLiteBalance
	isSet bool
}

func (v NullableXpubLiteBalance) Get() *XpubLiteBalance {
	return v.value
}

func (v *NullableXpubLiteBalance) Set(val *XpubLiteBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableXpubLiteBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableXpubLiteBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXpubLiteBalance(val *XpubLiteBalance) *NullableXpubLiteBalance {
	return &NullableXpubLiteBalance{value: val, isSet: true}
}

func (v NullableXpubLiteBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXpubLiteBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
