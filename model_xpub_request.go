/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// XpubRequest Request object to register(or delete) a new xpub
type XpubRequest struct {
	// The xpub to register.
	Xpub *string `json:"xpub,omitempty"`
	// Skip transactions before this height. Default is 0. Ignore this while deleting xpub.
	SkipHeight *int64 `json:"skipHeight,omitempty"`
	// Set the init maxReceiveIndex to {initReceiveIndex}(less than 5000) before the initial crawl , default is 200. This could increase cost.
	InitReceiveIndex *int32 `json:"initReceiveIndex,omitempty"`
	// Set the init maxChangeIndex(less than 5000) before the initial crawl , default is 200. This could increase cost.
	InitChangeIndex *int32 `json:"initChangeIndex,omitempty"`
}

// NewXpubRequest instantiates a new XpubRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXpubRequest() *XpubRequest {
	this := XpubRequest{}
	return &this
}

// NewXpubRequestWithDefaults instantiates a new XpubRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXpubRequestWithDefaults() *XpubRequest {
	this := XpubRequest{}
	return &this
}

// GetXpub returns the Xpub field value if set, zero value otherwise.
func (o *XpubRequest) GetXpub() string {
	if o == nil || o.Xpub == nil {
		var ret string
		return ret
	}
	return *o.Xpub
}

// GetXpubOk returns a tuple with the Xpub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubRequest) GetXpubOk() (*string, bool) {
	if o == nil || o.Xpub == nil {
		return nil, false
	}
	return o.Xpub, true
}

// HasXpub returns a boolean if a field has been set.
func (o *XpubRequest) HasXpub() bool {
	if o != nil && o.Xpub != nil {
		return true
	}

	return false
}

// SetXpub gets a reference to the given string and assigns it to the Xpub field.
func (o *XpubRequest) SetXpub(v string) {
	o.Xpub = &v
}

// GetSkipHeight returns the SkipHeight field value if set, zero value otherwise.
func (o *XpubRequest) GetSkipHeight() int64 {
	if o == nil || o.SkipHeight == nil {
		var ret int64
		return ret
	}
	return *o.SkipHeight
}

// GetSkipHeightOk returns a tuple with the SkipHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubRequest) GetSkipHeightOk() (*int64, bool) {
	if o == nil || o.SkipHeight == nil {
		return nil, false
	}
	return o.SkipHeight, true
}

// HasSkipHeight returns a boolean if a field has been set.
func (o *XpubRequest) HasSkipHeight() bool {
	if o != nil && o.SkipHeight != nil {
		return true
	}

	return false
}

// SetSkipHeight gets a reference to the given int64 and assigns it to the SkipHeight field.
func (o *XpubRequest) SetSkipHeight(v int64) {
	o.SkipHeight = &v
}

// GetInitReceiveIndex returns the InitReceiveIndex field value if set, zero value otherwise.
func (o *XpubRequest) GetInitReceiveIndex() int32 {
	if o == nil || o.InitReceiveIndex == nil {
		var ret int32
		return ret
	}
	return *o.InitReceiveIndex
}

// GetInitReceiveIndexOk returns a tuple with the InitReceiveIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubRequest) GetInitReceiveIndexOk() (*int32, bool) {
	if o == nil || o.InitReceiveIndex == nil {
		return nil, false
	}
	return o.InitReceiveIndex, true
}

// HasInitReceiveIndex returns a boolean if a field has been set.
func (o *XpubRequest) HasInitReceiveIndex() bool {
	if o != nil && o.InitReceiveIndex != nil {
		return true
	}

	return false
}

// SetInitReceiveIndex gets a reference to the given int32 and assigns it to the InitReceiveIndex field.
func (o *XpubRequest) SetInitReceiveIndex(v int32) {
	o.InitReceiveIndex = &v
}

// GetInitChangeIndex returns the InitChangeIndex field value if set, zero value otherwise.
func (o *XpubRequest) GetInitChangeIndex() int32 {
	if o == nil || o.InitChangeIndex == nil {
		var ret int32
		return ret
	}
	return *o.InitChangeIndex
}

// GetInitChangeIndexOk returns a tuple with the InitChangeIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubRequest) GetInitChangeIndexOk() (*int32, bool) {
	if o == nil || o.InitChangeIndex == nil {
		return nil, false
	}
	return o.InitChangeIndex, true
}

// HasInitChangeIndex returns a boolean if a field has been set.
func (o *XpubRequest) HasInitChangeIndex() bool {
	if o != nil && o.InitChangeIndex != nil {
		return true
	}

	return false
}

// SetInitChangeIndex gets a reference to the given int32 and assigns it to the InitChangeIndex field.
func (o *XpubRequest) SetInitChangeIndex(v int32) {
	o.InitChangeIndex = &v
}

func (o XpubRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Xpub != nil {
		toSerialize["xpub"] = o.Xpub
	}
	if o.SkipHeight != nil {
		toSerialize["skipHeight"] = o.SkipHeight
	}
	if o.InitReceiveIndex != nil {
		toSerialize["initReceiveIndex"] = o.InitReceiveIndex
	}
	if o.InitChangeIndex != nil {
		toSerialize["initChangeIndex"] = o.InitChangeIndex
	}
	return json.Marshal(toSerialize)
}

type NullableXpubRequest struct {
	value *XpubRequest
	isSet bool
}

func (v NullableXpubRequest) Get() *XpubRequest {
	return v.value
}

func (v *NullableXpubRequest) Set(val *XpubRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableXpubRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableXpubRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXpubRequest(val *XpubRequest) *NullableXpubRequest {
	return &NullableXpubRequest{value: val, isSet: true}
}

func (v NullableXpubRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXpubRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
