/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// ContractNftSellUtxo Contract nft sell Utxo belongs to the specified address
type ContractNftSellUtxo struct {
	// Address string of this utxo
	Address *string `json:"address,omitempty"`
	// Address calculated from contract hash(p2ch).
	ContractAddress *string `json:"contractAddress,omitempty"`
	// Txid for this utxo.
	Txid *string `json:"txid,omitempty"`
	// Output index for the Utxo.
	TxIndex *int32 `json:"txIndex,omitempty"`
	// Codehash of this utxo.
	CodeHash *string `json:"codeHash,omitempty"`
	// Genesis of this utxo.
	Genesis *string `json:"genesis,omitempty"`
	// The index of this NFT.
	TokenIndex *int64 `json:"tokenIndex,omitempty"`
	// the price of nft.
	Price *int64 `json:"price,omitempty"`
	// Mvc value of the utxo(Irrelavant to token value)
	Satoshi *int64 `json:"satoshi,omitempty"`
	// Mvc value of the utxo(In string format)
	SatoshiString *string `json:"satoshiString,omitempty"`
	// The height of this utxo, -1 for unconfirmed utxo.
	Height *int64 `json:"height,omitempty"`
	// Is current nft transfered into sell contract, If not ready, the following fields will be null
	IsReady *bool `json:"isReady,omitempty"`
	// SensibleId of the token
	SensibleId *string `json:"sensibleId,omitempty"`
	// The metanet tx describing the nft.
	MetaTxid *string `json:"metaTxid,omitempty"`
	// Symbol of the token.
	MetaOutputIndex *int32 `json:"metaOutputIndex,omitempty"`
	// The total supply of this NFT.
	TokenSupply *int64 `json:"tokenSupply,omitempty"`
	// Flag used for paging
	Flag *string `json:"flag,omitempty"`
}

// NewContractNftSellUtxo instantiates a new ContractNftSellUtxo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractNftSellUtxo() *ContractNftSellUtxo {
	this := ContractNftSellUtxo{}
	return &this
}

// NewContractNftSellUtxoWithDefaults instantiates a new ContractNftSellUtxo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractNftSellUtxoWithDefaults() *ContractNftSellUtxo {
	this := ContractNftSellUtxo{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ContractNftSellUtxo) SetAddress(v string) {
	o.Address = &v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetContractAddress() string {
	if o == nil || o.ContractAddress == nil {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetContractAddressOk() (*string, bool) {
	if o == nil || o.ContractAddress == nil {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasContractAddress() bool {
	if o != nil && o.ContractAddress != nil {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *ContractNftSellUtxo) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetTxid() string {
	if o == nil || o.Txid == nil {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetTxidOk() (*string, bool) {
	if o == nil || o.Txid == nil {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasTxid() bool {
	if o != nil && o.Txid != nil {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *ContractNftSellUtxo) SetTxid(v string) {
	o.Txid = &v
}

// GetTxIndex returns the TxIndex field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetTxIndex() int32 {
	if o == nil || o.TxIndex == nil {
		var ret int32
		return ret
	}
	return *o.TxIndex
}

// GetTxIndexOk returns a tuple with the TxIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetTxIndexOk() (*int32, bool) {
	if o == nil || o.TxIndex == nil {
		return nil, false
	}
	return o.TxIndex, true
}

// HasTxIndex returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasTxIndex() bool {
	if o != nil && o.TxIndex != nil {
		return true
	}

	return false
}

// SetTxIndex gets a reference to the given int32 and assigns it to the TxIndex field.
func (o *ContractNftSellUtxo) SetTxIndex(v int32) {
	o.TxIndex = &v
}

// GetCodeHash returns the CodeHash field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetCodeHash() string {
	if o == nil || o.CodeHash == nil {
		var ret string
		return ret
	}
	return *o.CodeHash
}

// GetCodeHashOk returns a tuple with the CodeHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetCodeHashOk() (*string, bool) {
	if o == nil || o.CodeHash == nil {
		return nil, false
	}
	return o.CodeHash, true
}

// HasCodeHash returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasCodeHash() bool {
	if o != nil && o.CodeHash != nil {
		return true
	}

	return false
}

// SetCodeHash gets a reference to the given string and assigns it to the CodeHash field.
func (o *ContractNftSellUtxo) SetCodeHash(v string) {
	o.CodeHash = &v
}

// GetGenesis returns the Genesis field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetGenesis() string {
	if o == nil || o.Genesis == nil {
		var ret string
		return ret
	}
	return *o.Genesis
}

// GetGenesisOk returns a tuple with the Genesis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetGenesisOk() (*string, bool) {
	if o == nil || o.Genesis == nil {
		return nil, false
	}
	return o.Genesis, true
}

// HasGenesis returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasGenesis() bool {
	if o != nil && o.Genesis != nil {
		return true
	}

	return false
}

// SetGenesis gets a reference to the given string and assigns it to the Genesis field.
func (o *ContractNftSellUtxo) SetGenesis(v string) {
	o.Genesis = &v
}

// GetTokenIndex returns the TokenIndex field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetTokenIndex() int64 {
	if o == nil || o.TokenIndex == nil {
		var ret int64
		return ret
	}
	return *o.TokenIndex
}

// GetTokenIndexOk returns a tuple with the TokenIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetTokenIndexOk() (*int64, bool) {
	if o == nil || o.TokenIndex == nil {
		return nil, false
	}
	return o.TokenIndex, true
}

// HasTokenIndex returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasTokenIndex() bool {
	if o != nil && o.TokenIndex != nil {
		return true
	}

	return false
}

// SetTokenIndex gets a reference to the given int64 and assigns it to the TokenIndex field.
func (o *ContractNftSellUtxo) SetTokenIndex(v int64) {
	o.TokenIndex = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetPrice() int64 {
	if o == nil || o.Price == nil {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetPriceOk() (*int64, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *ContractNftSellUtxo) SetPrice(v int64) {
	o.Price = &v
}

// GetSatoshi returns the Satoshi field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetSatoshi() int64 {
	if o == nil || o.Satoshi == nil {
		var ret int64
		return ret
	}
	return *o.Satoshi
}

// GetSatoshiOk returns a tuple with the Satoshi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetSatoshiOk() (*int64, bool) {
	if o == nil || o.Satoshi == nil {
		return nil, false
	}
	return o.Satoshi, true
}

// HasSatoshi returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasSatoshi() bool {
	if o != nil && o.Satoshi != nil {
		return true
	}

	return false
}

// SetSatoshi gets a reference to the given int64 and assigns it to the Satoshi field.
func (o *ContractNftSellUtxo) SetSatoshi(v int64) {
	o.Satoshi = &v
}

// GetSatoshiString returns the SatoshiString field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetSatoshiString() string {
	if o == nil || o.SatoshiString == nil {
		var ret string
		return ret
	}
	return *o.SatoshiString
}

// GetSatoshiStringOk returns a tuple with the SatoshiString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetSatoshiStringOk() (*string, bool) {
	if o == nil || o.SatoshiString == nil {
		return nil, false
	}
	return o.SatoshiString, true
}

// HasSatoshiString returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasSatoshiString() bool {
	if o != nil && o.SatoshiString != nil {
		return true
	}

	return false
}

// SetSatoshiString gets a reference to the given string and assigns it to the SatoshiString field.
func (o *ContractNftSellUtxo) SetSatoshiString(v string) {
	o.SatoshiString = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetHeight() int64 {
	if o == nil || o.Height == nil {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetHeightOk() (*int64, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *ContractNftSellUtxo) SetHeight(v int64) {
	o.Height = &v
}

// GetIsReady returns the IsReady field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetIsReady() bool {
	if o == nil || o.IsReady == nil {
		var ret bool
		return ret
	}
	return *o.IsReady
}

// GetIsReadyOk returns a tuple with the IsReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetIsReadyOk() (*bool, bool) {
	if o == nil || o.IsReady == nil {
		return nil, false
	}
	return o.IsReady, true
}

// HasIsReady returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasIsReady() bool {
	if o != nil && o.IsReady != nil {
		return true
	}

	return false
}

// SetIsReady gets a reference to the given bool and assigns it to the IsReady field.
func (o *ContractNftSellUtxo) SetIsReady(v bool) {
	o.IsReady = &v
}

// GetSensibleId returns the SensibleId field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetSensibleId() string {
	if o == nil || o.SensibleId == nil {
		var ret string
		return ret
	}
	return *o.SensibleId
}

// GetSensibleIdOk returns a tuple with the SensibleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetSensibleIdOk() (*string, bool) {
	if o == nil || o.SensibleId == nil {
		return nil, false
	}
	return o.SensibleId, true
}

// HasSensibleId returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasSensibleId() bool {
	if o != nil && o.SensibleId != nil {
		return true
	}

	return false
}

// SetSensibleId gets a reference to the given string and assigns it to the SensibleId field.
func (o *ContractNftSellUtxo) SetSensibleId(v string) {
	o.SensibleId = &v
}

// GetMetaTxid returns the MetaTxid field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetMetaTxid() string {
	if o == nil || o.MetaTxid == nil {
		var ret string
		return ret
	}
	return *o.MetaTxid
}

// GetMetaTxidOk returns a tuple with the MetaTxid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetMetaTxidOk() (*string, bool) {
	if o == nil || o.MetaTxid == nil {
		return nil, false
	}
	return o.MetaTxid, true
}

// HasMetaTxid returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasMetaTxid() bool {
	if o != nil && o.MetaTxid != nil {
		return true
	}

	return false
}

// SetMetaTxid gets a reference to the given string and assigns it to the MetaTxid field.
func (o *ContractNftSellUtxo) SetMetaTxid(v string) {
	o.MetaTxid = &v
}

// GetMetaOutputIndex returns the MetaOutputIndex field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetMetaOutputIndex() int32 {
	if o == nil || o.MetaOutputIndex == nil {
		var ret int32
		return ret
	}
	return *o.MetaOutputIndex
}

// GetMetaOutputIndexOk returns a tuple with the MetaOutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetMetaOutputIndexOk() (*int32, bool) {
	if o == nil || o.MetaOutputIndex == nil {
		return nil, false
	}
	return o.MetaOutputIndex, true
}

// HasMetaOutputIndex returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasMetaOutputIndex() bool {
	if o != nil && o.MetaOutputIndex != nil {
		return true
	}

	return false
}

// SetMetaOutputIndex gets a reference to the given int32 and assigns it to the MetaOutputIndex field.
func (o *ContractNftSellUtxo) SetMetaOutputIndex(v int32) {
	o.MetaOutputIndex = &v
}

// GetTokenSupply returns the TokenSupply field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetTokenSupply() int64 {
	if o == nil || o.TokenSupply == nil {
		var ret int64
		return ret
	}
	return *o.TokenSupply
}

// GetTokenSupplyOk returns a tuple with the TokenSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetTokenSupplyOk() (*int64, bool) {
	if o == nil || o.TokenSupply == nil {
		return nil, false
	}
	return o.TokenSupply, true
}

// HasTokenSupply returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasTokenSupply() bool {
	if o != nil && o.TokenSupply != nil {
		return true
	}

	return false
}

// SetTokenSupply gets a reference to the given int64 and assigns it to the TokenSupply field.
func (o *ContractNftSellUtxo) SetTokenSupply(v int64) {
	o.TokenSupply = &v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *ContractNftSellUtxo) GetFlag() string {
	if o == nil || o.Flag == nil {
		var ret string
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractNftSellUtxo) GetFlagOk() (*string, bool) {
	if o == nil || o.Flag == nil {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *ContractNftSellUtxo) HasFlag() bool {
	if o != nil && o.Flag != nil {
		return true
	}

	return false
}

// SetFlag gets a reference to the given string and assigns it to the Flag field.
func (o *ContractNftSellUtxo) SetFlag(v string) {
	o.Flag = &v
}

func (o ContractNftSellUtxo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.ContractAddress != nil {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	if o.Txid != nil {
		toSerialize["txid"] = o.Txid
	}
	if o.TxIndex != nil {
		toSerialize["txIndex"] = o.TxIndex
	}
	if o.CodeHash != nil {
		toSerialize["codeHash"] = o.CodeHash
	}
	if o.Genesis != nil {
		toSerialize["genesis"] = o.Genesis
	}
	if o.TokenIndex != nil {
		toSerialize["tokenIndex"] = o.TokenIndex
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Satoshi != nil {
		toSerialize["satoshi"] = o.Satoshi
	}
	if o.SatoshiString != nil {
		toSerialize["satoshiString"] = o.SatoshiString
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.IsReady != nil {
		toSerialize["isReady"] = o.IsReady
	}
	if o.SensibleId != nil {
		toSerialize["sensibleId"] = o.SensibleId
	}
	if o.MetaTxid != nil {
		toSerialize["metaTxid"] = o.MetaTxid
	}
	if o.MetaOutputIndex != nil {
		toSerialize["metaOutputIndex"] = o.MetaOutputIndex
	}
	if o.TokenSupply != nil {
		toSerialize["tokenSupply"] = o.TokenSupply
	}
	if o.Flag != nil {
		toSerialize["flag"] = o.Flag
	}
	return json.Marshal(toSerialize)
}

type NullableContractNftSellUtxo struct {
	value *ContractNftSellUtxo
	isSet bool
}

func (v NullableContractNftSellUtxo) Get() *ContractNftSellUtxo {
	return v.value
}

func (v *NullableContractNftSellUtxo) Set(val *ContractNftSellUtxo) {
	v.value = val
	v.isSet = true
}

func (v NullableContractNftSellUtxo) IsSet() bool {
	return v.isSet
}

func (v *NullableContractNftSellUtxo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractNftSellUtxo(val *ContractNftSellUtxo) *NullableContractNftSellUtxo {
	return &NullableContractNftSellUtxo{value: val, isSet: true}
}

func (v NullableContractNftSellUtxo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractNftSellUtxo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
