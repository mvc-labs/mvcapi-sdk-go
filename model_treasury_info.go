/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// TreasuryInfo current treasury utxo info
type TreasuryInfo struct {
	// current treasury utxo txid
	Txid *string `json:"txid,omitempty"`
	// current treasury utxo index
	Index *int32 `json:"index,omitempty"`
	// current treasury amount
	Amount *int64 `json:"amount,omitempty"`
	// current treasury utxo height
	Height *int64 `json:"height,omitempty"`
	// current treasury utxo block hash
	BlockHash *string `json:"blockHash,omitempty"`
	// current treasury utxo timestamp
	Timestamp *int64 `json:"timestamp,omitempty"`
}

// NewTreasuryInfo instantiates a new TreasuryInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTreasuryInfo() *TreasuryInfo {
	this := TreasuryInfo{}
	return &this
}

// NewTreasuryInfoWithDefaults instantiates a new TreasuryInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTreasuryInfoWithDefaults() *TreasuryInfo {
	this := TreasuryInfo{}
	return &this
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *TreasuryInfo) GetTxid() string {
	if o == nil || o.Txid == nil {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryInfo) GetTxidOk() (*string, bool) {
	if o == nil || o.Txid == nil {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *TreasuryInfo) HasTxid() bool {
	if o != nil && o.Txid != nil {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *TreasuryInfo) SetTxid(v string) {
	o.Txid = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *TreasuryInfo) GetIndex() int32 {
	if o == nil || o.Index == nil {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryInfo) GetIndexOk() (*int32, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *TreasuryInfo) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *TreasuryInfo) SetIndex(v int32) {
	o.Index = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TreasuryInfo) GetAmount() int64 {
	if o == nil || o.Amount == nil {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryInfo) GetAmountOk() (*int64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TreasuryInfo) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *TreasuryInfo) SetAmount(v int64) {
	o.Amount = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *TreasuryInfo) GetHeight() int64 {
	if o == nil || o.Height == nil {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryInfo) GetHeightOk() (*int64, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *TreasuryInfo) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *TreasuryInfo) SetHeight(v int64) {
	o.Height = &v
}

// GetBlockHash returns the BlockHash field value if set, zero value otherwise.
func (o *TreasuryInfo) GetBlockHash() string {
	if o == nil || o.BlockHash == nil {
		var ret string
		return ret
	}
	return *o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryInfo) GetBlockHashOk() (*string, bool) {
	if o == nil || o.BlockHash == nil {
		return nil, false
	}
	return o.BlockHash, true
}

// HasBlockHash returns a boolean if a field has been set.
func (o *TreasuryInfo) HasBlockHash() bool {
	if o != nil && o.BlockHash != nil {
		return true
	}

	return false
}

// SetBlockHash gets a reference to the given string and assigns it to the BlockHash field.
func (o *TreasuryInfo) SetBlockHash(v string) {
	o.BlockHash = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *TreasuryInfo) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreasuryInfo) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *TreasuryInfo) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *TreasuryInfo) SetTimestamp(v int64) {
	o.Timestamp = &v
}

func (o TreasuryInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Txid != nil {
		toSerialize["txid"] = o.Txid
	}
	if o.Index != nil {
		toSerialize["index"] = o.Index
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.BlockHash != nil {
		toSerialize["blockHash"] = o.BlockHash
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableTreasuryInfo struct {
	value *TreasuryInfo
	isSet bool
}

func (v NullableTreasuryInfo) Get() *TreasuryInfo {
	return v.value
}

func (v *NullableTreasuryInfo) Set(val *TreasuryInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTreasuryInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTreasuryInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTreasuryInfo(val *TreasuryInfo) *NullableTreasuryInfo {
	return &NullableTreasuryInfo{value: val, isSet: true}
}

func (v NullableTreasuryInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTreasuryInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
