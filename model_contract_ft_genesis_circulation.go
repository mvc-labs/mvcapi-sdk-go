/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.9
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// ContractFtGenesisCirculation Get total circulation for specific genesis of ft token.
type ContractFtGenesisCirculation struct {
	// Confirmed circulation of the token(Sum of confirmed amount).
	Confirmed *int64 `json:"confirmed,omitempty"`
	// Unconfirmed circulation of the token(Unconfirmed new token - Unconfirmed spent).
	Unconfirmed *int64 `json:"unconfirmed,omitempty"`
}

// NewContractFtGenesisCirculation instantiates a new ContractFtGenesisCirculation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractFtGenesisCirculation() *ContractFtGenesisCirculation {
	this := ContractFtGenesisCirculation{}
	return &this
}

// NewContractFtGenesisCirculationWithDefaults instantiates a new ContractFtGenesisCirculation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractFtGenesisCirculationWithDefaults() *ContractFtGenesisCirculation {
	this := ContractFtGenesisCirculation{}
	return &this
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise.
func (o *ContractFtGenesisCirculation) GetConfirmed() int64 {
	if o == nil || o.Confirmed == nil {
		var ret int64
		return ret
	}
	return *o.Confirmed
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractFtGenesisCirculation) GetConfirmedOk() (*int64, bool) {
	if o == nil || o.Confirmed == nil {
		return nil, false
	}
	return o.Confirmed, true
}

// HasConfirmed returns a boolean if a field has been set.
func (o *ContractFtGenesisCirculation) HasConfirmed() bool {
	if o != nil && o.Confirmed != nil {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given int64 and assigns it to the Confirmed field.
func (o *ContractFtGenesisCirculation) SetConfirmed(v int64) {
	o.Confirmed = &v
}

// GetUnconfirmed returns the Unconfirmed field value if set, zero value otherwise.
func (o *ContractFtGenesisCirculation) GetUnconfirmed() int64 {
	if o == nil || o.Unconfirmed == nil {
		var ret int64
		return ret
	}
	return *o.Unconfirmed
}

// GetUnconfirmedOk returns a tuple with the Unconfirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractFtGenesisCirculation) GetUnconfirmedOk() (*int64, bool) {
	if o == nil || o.Unconfirmed == nil {
		return nil, false
	}
	return o.Unconfirmed, true
}

// HasUnconfirmed returns a boolean if a field has been set.
func (o *ContractFtGenesisCirculation) HasUnconfirmed() bool {
	if o != nil && o.Unconfirmed != nil {
		return true
	}

	return false
}

// SetUnconfirmed gets a reference to the given int64 and assigns it to the Unconfirmed field.
func (o *ContractFtGenesisCirculation) SetUnconfirmed(v int64) {
	o.Unconfirmed = &v
}

func (o ContractFtGenesisCirculation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Confirmed != nil {
		toSerialize["confirmed"] = o.Confirmed
	}
	if o.Unconfirmed != nil {
		toSerialize["unconfirmed"] = o.Unconfirmed
	}
	return json.Marshal(toSerialize)
}

type NullableContractFtGenesisCirculation struct {
	value *ContractFtGenesisCirculation
	isSet bool
}

func (v NullableContractFtGenesisCirculation) Get() *ContractFtGenesisCirculation {
	return v.value
}

func (v *NullableContractFtGenesisCirculation) Set(val *ContractFtGenesisCirculation) {
	v.value = val
	v.isSet = true
}

func (v NullableContractFtGenesisCirculation) IsSet() bool {
	return v.isSet
}

func (v *NullableContractFtGenesisCirculation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractFtGenesisCirculation(val *ContractFtGenesisCirculation) *NullableContractFtGenesisCirculation {
	return &NullableContractFtGenesisCirculation{value: val, isSet: true}
}

func (v NullableContractFtGenesisCirculation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractFtGenesisCirculation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
